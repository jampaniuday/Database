DELETE, INSERT, UPDATE

Exercises for DELETE, INSERT, UPDATE
------------------------------------

NIKOVITS.EMP (empno, ename, job, mgr, hiredate, sal, comm, deptno)
NIKOVITS.DEPT(deptno, dname, loc)
NIKOVITS.SAL_CAT(category, lowest_sal, highest_sal)

/* You should create a copy of the tables before modifying the data

CREATE TABLE emp2 AS SELECT * FROM nikovits.emp;
CREATE TABLE dept2 AS SELECT * FROM nikovits.dept;
UPDATE emp2 ...
Check the data after modification: SELECT * FROM emp2; SELECT * FROM dept2;         
Drop the modified tables: DROP TABLE emp2; DROP TABLE emp2;

*/


DELETE

-- Delete the employees whose commission is null.

-- Delete the employees whose hiredate is before 1982.01.01.
   delete from emp3 where hiredate<'01-jan-1982'
   select * from emp3;

-- Delete the employees whose department's location is DALLAS.

-- Delete the employees whose salary is less than the average salary.
  delete from emp3 where sal < (select avg(sal) from emp3);
  select * from emp3;

-- Delete the employees whose salary is less than the average salary on his department.

-- Delete the employee (employees) whose salary is the greatest.

-- Delete the departments which has an employee with salary category 2.

-- Delete the departments which has at least two employees with salary category 2.


INSERT

-- Insert a new employee with the following values:
   empno=1, ename='Smith', deptno=10, hiredate=sysdate, salary=average salary in department 10.
   All the other columns should be NULL.
a) Insert the row with the 'VALUES' keyword
b) Insert the row with a SELECT query without 'VALUES' keyword.


UPDATE

-- Increase the salary of the employees in department 20 with 20%.

-- Increase the salary with 500 of the employees whose commission is NULL or whose salary is less than the average.

-- Increase the commission of all employees with the maximal commission.
   If an employee has NULL commission, treat it as 0.

-- Modify the name of the employee with the lowest salary to 'Poor'.

-- Increase the commission with 3000 of the employees, who has at least 2 direct subordinates.
   If an employee has NULL commission, treat it as 0.

-- Increase the salary of those employees who has a subordinate. The increment is the minimal salary.

-- Increase the salary of the employees who don't have a subordinate. The increment is
   the average salary of their own department.



SELECT hiredate 
from emp2;

SELECT * FROM emp2
 WHERE hiredate >= DATE'1981-01-01' AND hiredate < DATE'1982-01-01';

 SELECT * FROM 
 (
   SELECT * 
   FROM emp2
   ORDER BY hiredate
 )
 WHERE rownum <=2;

 SELECT * FROM 
 (
   SELECT * 
   FROM emp2
   ORDER BY hiredate
 )
 WHERE rownum <=1;


SELECT * FROM emp2
 WHERE hiredate >= DATE'1981-01-01' AND hiredate < DATE'1982-01-01';
 
delete * from emp2 where hiredate<'01-dec-1982'


CREATE TABLE emp2 AS SELECT * FROM nikovits.emp;
CREATE TABLE dept2 AS SELECT * FROM nikovits.dept;

select * from emp2;
CREATE TABLE emp3 AS SELECT * FROM nikovits.emp;
CREATE TABLE dept3 AS SELECT * FROM nikovits.dept;

select * 
from dept3 natural join emp3
where LOC = 'DALLAS';
 
 
 SELECT COUNT(*) AS NumberOfEmployees,
       AVG(Sal) AS AverageSalary
  FROM nikovits.emp
  
  
  (select avg(sal) from emp3);
  2173.214285714285714285714285714285714286
  
  select * from emp3 where sal < (select avg(sal) from emp3);
  delete from emp3 where sal < (select avg(sal) from emp3);
  select * from emp3;
  
  
SELECT *  
from dept4 natural join emp4
where LOC = 'DALLAS';


DECLARE
 v_date    date := SYSDATE + 1;
BEGIN
  FOR rec IN (SELECT * FROM dept3 for update) LOOP
    dbms_output.put(to_char(sysdate, 'hh24:mi:ss')||' --> ');
    dbms_output.put_line(rec.deptno);
    SELECT SYSDATE + 2/(24*60*60) INTO v_date FROM dual; -- 2 second
    WHILE sysdate < v_date LOOP  NULL;   END LOOP;   
    update dept3 set deptno = deptno+1;
  END LOOP;
END;
select * from dept3;




Exercises for DELETE, INSERT, UPDATE
------------------------------------

NIKOVITS.EMP (empno, ename, job, mgr, hiredate, sal, comm, deptno)
NIKOVITS.DEPT(deptno, dname, loc)
NIKOVITS.SAL_CAT(category, lowest_sal, highest_sal)

/* You should create a copy of the tables before modifying the data

CREATE TABLE emp2 AS SELECT * FROM nikovits.emp;
CREATE TABLE dept2 AS SELECT * FROM nikovits.dept;
UPDATE emp2 ...
Check the data after modification: SELECT * FROM emp2; SELECT * FROM dept2;         
Drop the modified tables: DROP TABLE emp2; DROP TABLE emp2;

*/


DELETE

-- Delete the employees whose commission is null.
DELETE FROM emp WHERE comm IS NULL;

-- Delete the employees whose hiredate is before 1982.01.01.
DELETE FROM emp WHERE hiredate < TO_DATE('1982.01.01', 'yyyy.mm.dd');

-- Delete the employees whose department's location is DALLAS.
DELETE FROM emp WHERE deptno IN 
   (SELECT deptno FROM dept WHERE loc = 'DALLAS');

-- Delete the employees whose salary is less than the average salary.
DELETE FROM emp WHERE sal < (SELECT AVG(sal) FROM emp);

-- Delete the employees whose salary is less than the average salary on his department.
DELETE FROM emp e1 WHERE sal < (SELECT AVG(sal) FROM emp WHERE deptno=e1.deptno);

-- Delete the employee (employees) whose salary is the greatest.
DELETE FROM emp WHERE sal = (SELECT MAX(sal) FROM emp);

-- Delete the departments which has an employee with salary category 2.
DELETE FROM dept WHERE EXISTS
  (SELECT * FROM emp, sal_cat 
   WHERE sal BETWEEN lowest_sal AND highest_sal AND CATEGORY=2
   AND emp.deptno=dept.deptno);

-- Delete the departments which has at least two employees with salary category 2.
DELETE FROM dept WHERE deptno IN
  (SELECT deptno FROM emp, sal_cat 
   WHERE sal BETWEEN lowest_sal AND highest_sal AND CATEGORY=2
   GROUP BY deptno
   HAVING count(distinct empno) = 2);


INSERT

-- Insert a new employee with the following values:
   empno=1, ename='Smith', deptno=10, hiredate=sysdate, salary=average salary in department 10.
   All the other columns should be NULL.
a) Insert the row with the 'VALUES' keyword
b) Insert the row with a SELECT query without 'VALUES' keyword.

a)
INSERT INTO emp(empno, ename, hiredate, sal, deptno) 
VALUES(1,'Smith', SYSDATE, (SELECT AVG(sal) FROM emp WHERE deptno=10),10);

b)
INSERT INTO emp(empno, ename, hiredate, sal, deptno) 
SELECT 1,'Smith', SYSDATE, AVG(sal), 10 FROM emp WHERE deptno=10;


UPDATE

-- Increase the salary of the employees in department 20 with 20%.
UPDATE emp SET sal = sal*1.2 WHERE deptno=20;

-- Increase the salary with 500 of the employees whose commission is NULL or whose salary is less than the average.
UPDATE emp SET sal = sal + 500 
WHERE comm IS NULL OR sal < ( SELECT AVG(sal) FROM emp);

-- Increase the commission of all employees with the maximal commission.
   If an employee has NULL commission, treat it as 0.
UPDATE emp SET comm = 
 (SELECT MAX(emp1.comm) + NVL(emp.comm,0) from emp emp1);

-- Modify the name of the employee with the lowest salary to 'Poor'.
UPDATE emp SET ename = 'Poor' 
WHERE sal = (SELECT MIN(sal) FROM emp);

-- Increase the commission with 3000 of the employees, who has at least 2 direct subordinates.
   If an employee has NULL commission, treat it as 0.
UPDATE emp SET comm=coalesce(comm,0)+3000 WHERE empno IN
  (SELECT mgr FROM emp GROUP BY mgr HAVING count(*) = 2);

-- Increase the salary of those employees who has a subordinate. The increment is the minimal salary.
UPDATE emp SET sal = sal + (SELECT min(sal) from emp) 
WHERE empno IN (SELECT mgr FROM emp);

-- Increase the salary of the employees who don't have a subordinate. The increment is
   the average salary of their own department.
UPDATE emp e1 SET sal = sal + (SELECT avg(sal) FROM emp e2 WHERE e2.deptno = e1.deptno)
WHERE empno NOT IN (SELECT coalesce(mgr,0) FROM emp);









  
 
