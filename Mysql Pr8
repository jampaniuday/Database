CREATE TABLE students (
    id INT AUTO_INCREMENT,
    name VARCHAR(30),
    birth DATE,
    gpa FLOAT,
    grad INT,
    PRIMARY KEY(id));
    

INSERT INTO students(name, birth, gpa, grad)
     VALUES ('Anderson', '1987-10-22', 3.9, 2009);
INSERT INTO students(name, birth, gpa, grad)
     VALUES ('Jones', '1990-4-16', 2.4, 2012);
INSERT INTO students(name, birth, gpa, grad)
    VALUES ('Hernandez', '1989-8-12', 3.1, 2011);
INSERT INTO students(name, birth, gpa, grad)
    VALUES ('Chen', '1990-2-4', 3.2, 2011);


mysql> select * from world.students;
+----+-----------+------------+------+------+
| id | name      | birth      | gpa  | grad |
+----+-----------+------------+------+------+
|  1 | Anderson  | 1987-10-22 |  3.9 | 2009 |
|  2 | Jones     | 1990-04-16 |  2.4 | 2012 |
|  3 | Hernandez | 1989-08-12 |  3.1 | 2011 |
|  4 | Chen      | 1990-02-04 |  3.2 | 2011 |
+----+-----------+------------+------+------+
4 rows in set (0.00 sec)

mysql>

SELECT * FROM students;
mysql> SELECT * FROM world.students;
+----+-----------+------------+------+------+
| id | name      | birth      | gpa  | grad |
+----+-----------+------------+------+------+
|  1 | Anderson  | 1987-10-22 |  3.9 | 2009 |
|  2 | Jones     | 1990-04-16 |  2.4 | 2012 |
|  3 | Hernandez | 1989-08-12 |  3.1 | 2011 |
|  4 | Chen      | 1990-02-04 |  3.2 | 2011 |
+----+-----------+------------+------+------+
4 rows in set (0.00 sec)

mysql>
mysql> SELECT name, gpa FROM world.students;
+-----------+------+
| name      | gpa  |
+-----------+------+
| Anderson  |  3.9 |
| Jones     |  2.4 |
| Hernandez |  3.1 |
| Chen      |  3.2 |
+-----------+------+
4 rows in set (0.00 sec)

mysql>
SELECT gpa, name, grad
    FROM students
    WHERE gpa > 3.0
    ORDER BY gpa DESC;
    
mysql> SELECT gpa, name, grad FROM world.students WHERE gpa > 3.0 ORDER BY gpa DESC;
+------+-----------+------+
| gpa  | name      | grad |
+------+-----------+------+
|  3.9 | Anderson  | 2009 |
|  3.2 | Chen      | 2011 |
|  3.1 | Hernandez | 2011 |
+------+-----------+------+
3 rows in set (0.00 sec)

mysql>


-- ---------------------------------------------------- -- 
-- Lab Example: Students, Teachers, Subject, and Grades -- 
-- ---------------------------------------------------- -- 


--
-- SQL as DDL: Data Definition Language -- Defining the schema.
--
DROP TABLE IF EXISTS students;
CREATE TABLE students(
   sid  int  not null, 
   name text not null,
 primary key(sid)
);

CREATE TABLE teachers(
   tid  int  not null,
   name text not null, 
 primary key(tid)
);

CREATE TABLE subjects(
   subid int  not null,
   name  text not null,
 primary key(subid)
);

DROP TABLE IF EXISTS grades;
CREATE TABLE grades(
  studentID int not null references students(sid),
  teacherID int not null references teachers(tid),
  subjectID int not null references subjects(subid),
  grade varchar(3),
 primary key(studentID, teacherID, subjectID)
);


--
-- SQL as DML: Data Manipulation Language -- Add test data to the tables.
--
INSERT INTO students (sid, name) VALUES(1, 'Simon');
INSERT INTO students (sid, name) VALUES(2, 'Alvin');
INSERT INTO students (sid, name) VALUES(3, 'Theo');
INSERT INTO students (sid, name) VALUES(4, 'Brittany');
INSERT INTO students (sid, name) VALUES(5, 'Jenette');
INSERT INTO students (sid, name) VALUES(6, 'Elenor');
INSERT INTO students (sid, name) VALUES(7, 'Stu');

select *
from Students;

INSERT INTO teachers (tid, name) VALUES (1, 'Washington');
INSERT INTO teachers (tid, name) VALUES (2, 'Adams');
INSERT INTO teachers (tid, name) VALUES (3, 'Jefferson');
INSERT INTO teachers (tid, name) VALUES (4, 'Lincoln');

select *
from teachers;

INSERT INTO subjects (subid, name) VALUES (1, 'History');
INSERT INTO subjects (subid, name) VALUES (2, 'Biology');
INSERT INTO subjects (subid, name) VALUES (3, 'SF');

select *
from subjects;

INSERT INTO grades (studentID, teacherID, subjectID, grade) VALUES (1, 2, 1, 'A');
INSERT INTO grades (studentID, teacherID, subjectID, grade) VALUES (1, 2, 2, 'B');
INSERT INTO grades (studentID, teacherID, subjectID, grade) VALUES (7, 4, 3, 'C+');
INSERT INTO grades (studentID, teacherID, subjectID, grade) VALUES (7, 3, 2, 'F');
INSERT INTO grades (studentID, teacherID, subjectID, grade) VALUES (6, 2, 1, 'B+');
INSERT INTO grades (studentID, teacherID, subjectID, grade) VALUES (2, 4, 3, 'C');
INSERT INTO grades (studentID, teacherID, subjectID, grade) VALUES (3, 4, 3, 'B');

select *
from grades;


--
-- SQL as DML: Data Manipulation Language -- Queries to answer interesting quesstions about the data.
--

-- Students in order by name:
select *
from students
order by name ASC;


-- Names of students in any class taught by Adams:
select name
from students 
where sid in 
  (select studentID
   from grades
   where teacherID in 
     (select tid
      from teachers
      where name = 'Adams')
   );


-- Names of teachers who taught Biology:
select name
from teachers
where tid in 
  (select teacherID
   from grades
   where subjectID in 
     (select subid
      from subjects
      where name = 'Biology')
   );

         
-- Namaes of teachers who have not yet taught:
select name
from teachers
where tid not in 
  (select teacherID
   from grades);

   
-- Names of students who have not yet taken any classes:
select name
from students 
where sid not in 
  (select studentID
   from grades);

   
-- Names of students in the same class:

select name
from students
where sid in 
  (SELECT studentID
   FROM grades g1 
   WHERE 
      (SELECT COUNT(*) 
       FROM grades g2 
       WHERE g1.subjectID = g2.subjectID 
         AND g1.teacherID = g2.teacherID ) > 1 
   ORDER BY subjectID
  );
  


select t.name   as "Teacher",
       sub.name as "Subject",
       s.name   as "Student"
from grades g1, 
     grades g2, 
     students s, 
     teachers t,
     subjects sub
where g1.teacherID = g2.teacherID
  and g1.subjectID = g2.subjectID
  and g1.studentID = s.sid
  and g1.teacherID = t.tid
  and g1.subjectID = sub.subid
order by t.name, sub.name, s.name;


     
参考:
http://www.labouseur.com/courses/db/s4-lab-students_teachers_subjects_grades.txt
https://blog.csdn.net/sinat_35861727/article/details/78866904

   
数据库操作：　

　　1、查看数据库：

　　　　>SHOW DATABASES;

　　2、创建数据库：

　　　　>CREATE DATABASE db_name;　　//db_name为数据库名

　　3、使用数据库：

　　　　>USE db_name;

　　4、删除数据库：

　　　　>DROP DATABASE db_name;




创建表：

　　1、创建表：

　　　　>CREATE TABLE table_name(

　　　　>id TINYINT UNSIGNED NOT NULL AUTO_INCREMENT,　　　　//id值，无符号、非空、递增——唯一性，可做主键。

　　　　>name VARCHAR(60) NOT NULL

　　　　>score TINYINT UNSIGNED NOT NULL DEFAULT 0,　　　　//设置默认列值

　　　　>PRIMARY KEY(id)

　　　　>)ENGINE=InnoDB　　　　//设置表的存储引擎，一般常用InnoDB和MyISAM；InnoDB可靠，支持事务；MyISAM高效不支持全文检索

　　　　>DEFAULT charset=utf8;　　//设置默认的编码，防止数据库中文乱码

　　　　如果有条件的创建数据表还可以使用   >CREATE TABLE IF NOT EXISTS tb_name(........

　　2、复制表：

　　　　>CREATE TABLE tb_name2 SELECT * FROM tb_name;

　　　　或者部分复制：

　　　　>CREATE TABLE tb_name2 SELECT id,name FROM tb_name;

　　3、创建临时表：

　　　　>CREATE TEMPORARY TABLE tb_name(这里和创建普通表一样);

　　4、查看数据库中可用的表：

　　　　>SHOW TABLES;

　　5、查看表的结构：

　　　　>DESCRIBE tb_name;

　　　　也可以使用：

　　　　>SHOW COLUMNS in tb_name; 　　　　//from也可以

　　6、删除表：

　　　　>DROP [ TEMPORARY ] TABLE [ IF EXISTS ] tb_name[ ,tb_name2.......];

　　　　实例：

　　　　>DROP TABLE IF EXISTS tb_name;

　　7、表重命名：

　　　　>RENAME TABLE name_old TO name_new;

　　　　还可以使用：

　　　　>ALTER TABLE name_old RENAME name_new;
    
    
添加一列
    ALTER TABLE students ADD COLUMN address varchar(80) NOT NULL;
    describe students;
    mysql> describe world.students;
+---------+-------------+------+-----+---------+-------+
| Field   | Type        | Null | Key | Default | Extra |
+---------+-------------+------+-----+---------+-------+
| sid     | int(11)     | NO   | PRI | NULL    |       |
| name    | text        | NO   |     | NULL    |       |
| address | varchar(80) | NO   |     | NULL    |       |
+---------+-------------+------+-----+---------+-------+
3 rows in set (0.00 sec)

mysql>

     select * from students;
     select * from world.students;
     mysql> select * from world.students;
+-----+----------+---------+
| sid | name     | address |
+-----+----------+---------+
|   1 | Simon    |         |
|   2 | Alvin    |         |
|   3 | Theo     |         |
|   4 | Brittany |         |
|   5 | Jenette  |         |
|   6 | Elenor   |         |
|   7 | Stu      |         |
+-----+----------+---------+
7 rows in set (0.00 sec)

mysql>
    
    
    
添加一行
mysql> INSERT INTO world.students (sid,name,address) VALUES  (8,'Tom B. Erichsen', 'Norway');
Query OK, 1 row affected (0.10 sec)

mysql> select * from world.students;
+-----+-----------------+---------+
| sid | name            | address |
+-----+-----------------+---------+
|   1 | Simon           |         |
|   2 | Alvin           |         |
|   3 | Theo            |         |
|   4 | Brittany        |         |
|   5 | Jenette         |         |
|   6 | Elenor          |         |
|   7 | Stu             |         |
|   8 | Tom B. Erichsen | Norway  |
+-----+-----------------+---------+
8 rows in set (0.00 sec)

mysql>

