PostgreSQL
PostgreSQL CREATE DATABASE with Example

https://www.guru99.com/postgresql-create-database.html
https://docs.aws.amazon.com/zh_cn/dms/latest/userguide/CHAP_Target.PostgreSQL.html
http://www.postgresqltutorial.com/

psql (11.4)
Type "help" for help.

postgres=# CREATE DATABASE guru99;
CREATE DATABASE
postgres=# \l 
                             List of databases
   Name    |  Owner   | Encoding | Collate | Ctype |   Access privileges   
-----------+----------+----------+---------+-------+-----------------------
 guru99    | postgres | UTF8     | C       | C     | 
 postgres  | postgres | UTF8     | C       | C     | 
 template0 | postgres | UTF8     | C       | C     | =c/postgres          +
           |          |          |         |       | postgres=CTc/postgres
 template1 | postgres | UTF8     | C       | C     | =c/postgres          +
           |          |          |         |       | postgres=CTc/postgres
(4 rows)

postgres=# \c guru99
You are now connected to database "guru99" as user "postgres".
guru99=# 


https://www.postgresql.org/docs/8.4/tutorial-join.html


https://www.enterprisedb.com/


postgres=# SELECT * FROM weather;                                               ERROR:  relation "weather" does not exist
LINE 1: SELECT * FROM weather;
                      ^
postgres=# CREATE TABLE weather (
postgres(#     city            varchar(80),
postgres(#     temp_lo         int,           -- low temperature
postgres(#     temp_hi         int,           -- high temperature
postgres(#     prcp            real,          -- precipitation
postgres(#     date            date
postgres(# );
CREATE TABLE
postgres=# SELECT * FROM weather;                                                city | temp_lo | temp_hi | prcp | date 
------+---------+---------+------+------
(0 rows)

postgres=# CREATE TABLE cities (
postgres(#     name            varchar(80),
postgres(#     location        point
postgres(# );
CREATE TABLE
postgres=# INSERT INTO weather VALUES ('San Francisco', 46, 50, 0.25, '2004-11-27');;
INSERT 0 1
postgres=# INSERT INTO cities VALUES ('San Francisco', '(-194.0, 53.0)');
INSERT 0 1
postgres=# INSERT INTO weather (city, temp_lo, temp_hi, prcp, date)
postgres-#     VALUES ('San Francisco', 43, 57, 0.0, '1994-11-29');
INSERT 0 1
postgres=# INSERT INTO weather (date, city, temp_hi, temp_lo)
postgres-#     VALUES ('1994-11-29', 'Hayward', 54, 37);
INSERT 0 1
postgres=# SELECT * FROM weather;
     city      | temp_lo | temp_hi | prcp |    date    
---------------+---------+---------+------+------------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27
 San Francisco |      43 |      57 |    0 | 1994-11-29
 Hayward       |      37 |      54 |      | 1994-11-29
(3 rows)

postgres=# SELECT city, (temp_hi+temp_lo)/2 AS temp_avg, date FROM weather;
     city      | temp_avg |    date    
---------------+----------+------------
 San Francisco |       48 | 2004-11-27
 San Francisco |       50 | 1994-11-29
 Hayward       |       45 | 1994-11-29
(3 rows)

postgres=# SELECT * FROM weather
postgres-#     ORDER BY city;
     city      | temp_lo | temp_hi | prcp |    date    
---------------+---------+---------+------+------------
 Hayward       |      37 |      54 |      | 1994-11-29
 San Francisco |      46 |      50 | 0.25 | 2004-11-27
 San Francisco |      43 |      57 |    0 | 1994-11-29
(3 rows)

postgres=# SELECT * FROM weather
postgres-#     WHERE city = 'San Francisco' AND prcp > 0;
     city      | temp_lo | temp_hi | prcp |    date    
---------------+---------+---------+------+------------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27
(1 row)

postgres=# SELECT DISTINCT city
postgres-#     FROM weather
postgres-#     ORDER BY city;
     city      
---------------
 Hayward
 San Francisco
(2 rows)

postgres=# SELECT *
postgres-#     FROM weather, cities
postgres-#     WHERE city = name;
     city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | San Francisco | (-194,53)
 San Francisco |      43 |      57 |    0 | 1994-11-29 | San Francisco | (-194,53)
(2 rows)

postgres=# SELECT weather.city, weather.temp_lo, weather.temp_hi,
postgres-#        weather.prcp, weather.date, cities.location
postgres-#     FROM weather, cities
postgres-#     WHERE cities.name = weather.city;
     city      | temp_lo | temp_hi | prcp |    date    | location  
---------------+---------+---------+------+------------+-----------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | (-194,53)
 San Francisco |      43 |      57 |    0 | 1994-11-29 | (-194,53)
(2 rows)

postgres=# SELECT *
postgres-#     FROM weather INNER JOIN cities ON (weather.city = cities.name);
     city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | San Francisco | (-194,53)
 San Francisco |      43 |      57 |    0 | 1994-11-29 | San Francisco | (-194,53)
(2 rows)

postgres=# SELECT *
postgres-#     FROM weather LEFT OUTER JOIN cities ON (weather.city = cities.name);
     city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | San Francisco | (-194,53)
 San Francisco |      43 |      57 |    0 | 1994-11-29 | San Francisco | (-194,53)
 Hayward       |      37 |      54 |      | 1994-11-29 |               | 
(3 rows)

postgres=# SELECT *
postgres-#     FROM weather LEFT OUTER JOIN cities ON (weather.city = cities.name);
     city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | San Francisco | (-194,53)
 San Francisco |      43 |      57 |    0 | 1994-11-29 | San Francisco | (-194,53)
 Hayward       |      37 |      54 |      | 1994-11-29 |               | 
(3 rows)

postgres=# SELECT W1.city, W1.temp_lo AS low, W1.temp_hi AS high,
postgres-#     W2.city, W2.temp_lo AS low, W2.temp_hi AS high
postgres-#     FROM weather W1, weather W2
postgres-#     WHERE W1.temp_lo < W2.temp_lo
postgres-#     AND W1.temp_hi > W2.temp_hi;
     city      | low | high |     city      | low | high 
---------------+-----+------+---------------+-----+------
 San Francisco |  43 |   57 | San Francisco |  46 |   50
 Hayward       |  37 |   54 | San Francisco |  46 |   50
(2 rows)

postgres=# SELECT *
postgres-#     FROM weather w, cities c
postgres-#     WHERE w.city = c.name;
     city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | San Francisco | (-194,53)
 San Francisco |      43 |      57 |    0 | 1994-11-29 | San Francisco | (-194,53)
(2 rows)

postgres=# SELECT city, max(temp_lo)
postgres-#     FROM weather
postgres-#     GROUP BY city;
     city      | max 
---------------+-----
 Hayward       |  37
 San Francisco |  46
(2 rows)



postgres=# select * from weather join cities on weather.city = cities.name;                              city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | San Francisco | (-194,53)
 San Francisco |      43 |      57 |    0 | 1994-11-29 | San Francisco | (-194,53)
(2 rows)

postgres=# select * from weather inner join cities on weather.city = cities.name;
     city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | San Francisco | (-194,53)
 San Francisco |      43 |      57 |    0 | 1994-11-29 | San Francisco | (-194,53)
(2 rows)

        
postgres=# select * from weather left join cities on weather.city = cities.name;
     city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | San Francisco | (-194,53)
 San Francisco |      43 |      57 |    0 | 1994-11-29 | San Francisco | (-194,53)
 Hayward       |      37 |      54 |      | 1994-11-29 |               | 
(3 rows)

postgres=# select * from weather right join cities on weather.city = cities.name;
     city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      43 |      57 |    0 | 1994-11-29 | San Francisco | (-194,53)
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | San Francisco | (-194,53)
(2 rows)

postgres=# select * from weather full join cities on weather.city = cities.name;
     city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | San Francisco | (-194,53)
 San Francisco |      43 |      57 |    0 | 1994-11-29 | San Francisco | (-194,53)
 Hayward       |      37 |      54 |      | 1994-11-29 |               | 
(3 rows)

postgres=# 

https://www.postgresql.org/docs/9.3/tutorial-select.html

postgres=# SELECT * FROM weather;
     city      | temp_lo | temp_hi | prcp |    date    
---------------+---------+---------+------+------------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27
 San Francisco |      43 |      57 |    0 | 1994-11-29
 Hayward       |      37 |      54 |      | 1994-11-29
(3 rows)


postgres=# SELECT city, (temp_hi+temp_lo)/2 AS temp_avg, date FROM weather;
     city      | temp_avg |    date    
---------------+----------+------------
 San Francisco |       48 | 2004-11-27
 San Francisco |       50 | 1994-11-29
 Hayward       |       45 | 1994-11-29
(3 rows)

postgres=# 
postgres=# SELECT * FROM weather
postgres-#     ORDER BY city;
     city      | temp_lo | temp_hi | prcp |    date    
---------------+---------+---------+------+------------
 Hayward       |      37 |      54 |      | 1994-11-29
 San Francisco |      46 |      50 | 0.25 | 2004-11-27
 San Francisco |      43 |      57 |    0 | 1994-11-29
(3 rows)

postgres=# 
postgres-#     FROM weather, cities
postgres-#     WHERE city = name;
     city      | temp_lo | temp_hi | prcp |    date    |     name      | location  
---------------+---------+---------+------+------------+---------------+-----------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | San Francisco | (-194,53)
 San Francisco |      43 |      57 |    0 | 1994-11-29 | San Francisco | (-194,53)
(2 rows)

postgres=# 


postgres=# SELECT weather.city, weather.temp_lo, weather.temp_hi,
postgres-#        weather.prcp, weather.date, cities.location
postgres-#     FROM weather, cities
postgres-#     WHERE cities.name = weather.city;
     city      | temp_lo | temp_hi | prcp |    date    | location  
---------------+---------+---------+------+------------+-----------
 San Francisco |      46 |      50 | 0.25 | 2004-11-27 | (-194,53)
 San Francisco |      43 |      57 |    0 | 1994-11-29 | (-194,53)
(2 rows)

postgres=# 

postgres=# SELECT max(temp_lo) FROM weather;
 max 
-----
  46
(1 row)

postgres=# 

postgres=# 


postgres=# 
postgres=# CREATE TABLE COMPANY(
postgres(#    ID INT PRIMARY KEY     NOT NULL,
postgres(#    NAME           TEXT    NOT NULL,
postgres(#    AGE            INT     NOT NULL,
postgres(#    ADDRESS        CHAR(50),
postgres(#    SALARY         REAL
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE DEPARTMENT(
postgres(#    ID INT PRIMARY KEY      NOT NULL,
postgres(#    DEPT           CHAR(50) NOT NULL,
postgres(#    EMP_ID         INT      NOT NULL
postgres(# );
CREATE TABLE
postgres=# testdb-# \d
               List of relations
 Schema |        Name        | Type  |  Owner   
--------+--------------------+-------+----------
 public | cities             | table | postgres
 public | company            | table | postgres
 public | department         | table | postgres
 public | employees          | table | postgres
 public | employees2         | table | postgres
 public | myview             | view  | postgres
 public | tbl_course         | table | postgres
 public | tbl_student        | table | postgres
 public | tbl_student_course | table | postgres
 public | weather            | table | postgres
(10 rows)

postgres-# 

INSERT INTO DEPARTMENT (ID, DEPT, EMP_ID)
VALUES (1, 'IT Billing', 1 );

INSERT INTO DEPARTMENT (ID, DEPT, EMP_ID)
VALUES (2, 'Engineering', 2 );

INSERT INTO DEPARTMENT (ID, DEPT, EMP_ID)
VALUES (3, 'Finance', 7 );

postgres=# SELECT * FROM DEPARTMENT
postgres-# ;
 id |                        dept                        | emp_id 
----+----------------------------------------------------+--------
  1 | IT Billing                                         |      1
  2 | Engineering                                        |      2
  3 | Finance                                            |      7
(3 rows)

postgres=# 




postgres=# CREATE TABLE phonebook(phone VARCHAR(32), firstname VARCHAR(32), lastname VARCHAR(32), address VARCHAR(64));
CREATE TABLE
postgres=# INSERT INTO phonebook(phone, firstname, lastname, address) VALUES('+1 123 456 7890', 'John', 'Doe', 'North America'); 
INSERT 0 1
postgres=# SELECT * FROM phonebook ORDER BY lastname;
      phone      | firstname | lastname |    address    
-----------------+-----------+----------+---------------
 +1 123 456 7890 | John      | Doe      | North America
(1 row)

postgres=# 

postgres=# SELECT * FROM phonebook WHERE lastname = 'Doe'; 
      phone      | firstname | lastname |    address    
-----------------+-----------+----------+---------------
 +1 123 456 7890 | John      | Doe      | North America
(1 row)

postgres=# SELECT * FROM phonebook WHERE firstname = 'John' AND lastname = 'Doe'; 
      phone      | firstname | lastname |    address    
-----------------+-----------+----------+---------------
 +1 123 456 7890 | John      | Doe      | North America
(1 row)

postgres=# UPDATE phonebook SET address = 'North America', phone = '+1 123 456 7890' WHERE firstname = 'John' AND lastname = 'Doe'; 
UPDATE 1
postgres=# SELECT * FROM phonebook;

phone      | firstname | lastname |    address    
-----------------+-----------+----------+---------------
 +1 123 456 7890 | John      | Doe      | North America
(1 row)

postgres=# UPDATE phonebook SET address = 'North America', phone = '+1 123 456 7899' WHERE firstname = 'John' AND lastname = 'Doe';
UPDATE 1
postgres=# SELECT * FROM phonebook;                                                   

phone      | firstname | lastname |    address    
-----------------+-----------+----------+---------------
 +1 123 456 7899 | John      | Doe      | North America
(1 row)

postgres=# 

https://www.ntchosting.com/encyclopedia/databases/postgresql/
https://www.ntchosting.com/encyclopedia/frameworks/
http://www.postgresqltutorial.com/postgresql-date/

postgres=# CREATE TABLE documents (
postgres(#    document_id serial PRIMARY KEY,
postgres(#    header_text VARCHAR (255) NOT NULL,
postgres(#    posting_date DATE NOT NULL DEFAULT CURRENT_DATE
postgres(# );
CREATE TABLE
postgres=# INSERT INTO documents (header_text)
postgres-# VALUES
postgres-#    ('Billing to customer XYZ');
INSERT 0 1
postgres=# SELECT
postgres-#    *
postgres-# FROM
postgres-#    documents;
 document_id |       header_text       | posting_date 
-------------+-------------------------+--------------
           1 | Billing to customer XYZ | 2019-11-06
(1 row)

postgres=# 









